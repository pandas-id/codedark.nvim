local filetypes = {
-- Markdown:
markdownBold = {fg=blue, gui='bold'},
markdownCode = {fg=orange},
markdownRule = {fg=blue, gui='bold'},
markdownCodeDelimiter = {fg=orange},
markdownHeadingDelimiter = {fg=blue},
markdownFootnote = {fg=orange},
markdownFootnoteDefinition = {fg=orange},
markdownUrl = {fg=lightblue, gui='underline'},
markdownLinkText = {fg=orange},
markdownEscape = {fg=yelloworange},

-- Asciidoc (for default syntax highlighting,
asciidocAttributeEntry = {fg=yelloworange},
asciidocAttributeList = {fg=pink},
asciidocAttributeRef = {fg=yelloworange},
asciidocHLabel = {fg=blue, gui='bold'},
asciidocListingBlock = {fg=orange},
asciidocMacroAttributes = {fg=yelloworange},
asciidocOneLineTitle = {fg=blue, gui='bold'},
asciidocPassthroughBlock = {fg=blue},
asciidocQuotedMonospaced = {fg=orange},
asciidocTriplePlusPassthrough = {fg=yellow},
asciidocMacro = {fg=pink},
asciidocAdmonition = {fg=orange},
asciidocQuotedEmphasized = {fg=blue, gui='italic'},
asciidocQuotedEmphasized2 = {fg=blue, gui='italic'},
asciidocQuotedEmphasizedItalic = {fg=blue, gui='italic'},

asciidocBackslash = 'Keyword',
asciidocQuotedBold = 'markdownBold',
asciidocQuotedMonospaced2 = 'asciidocQuotedMonospaced',
asciidocQuotedUnconstrainedBold = 'asciidocQuotedBold',
asciidocQuotedUnconstrainedEmphasized = 'asciidocQuotedEmphasized',
asciidocURL = 'markdownUrl',

-- JSON:
jsonKeyword = {fg=lightblue},
jsonEscape = {fg=yelloworange},
jsonNull = {fg=blue},
jsonBoolean = {fg=blue},

-- HTML:
htmlTag = {fg=gray},
htmlEndTag = {fg=gray},
htmlTagName = {fg=blue},
htmlSpecialTagName = {fg=blue},
htmlArg = {fg=lightblue},

-- PHP:
phpStaticClasses = {fg=bluegreen},
phpMethod = {fg=yellow},
phpClass = {fg=bluegreen},
phpFunction = {fg=yellow},
phpInclude = {fg=blue},
phpUseClass = {fg=bluegreen},
phpRegion = {fg=bluegreen},
phpMethodsVar = {fg=lightblue},

-- CSS:
cssBraces = {fg=front},
cssInclude = {fg=pink},
cssTagName = {fg=yelloworange},
cssClassName = {fg=yelloworange},
cssPseudoClass = {fg=yelloworange},
cssPseudoClassId = {fg=yelloworange},
cssPseudoClassLang = {fg=yelloworange},
cssIdentifier = {fg=yelloworange},
cssProp = {fg=lightblue},
cssDefinition = {fg=lightblue},
cssAttr = {fg=orange},
cssAttrRegion = {fg=orange},
cssColor = {fg=orange},
cssFunction = {fg=orange},
cssFunctionName = {fg=orange},
cssVendor = {fg=orange},
cssValueNumber = {fg=orange},
cssValueLength = {fg=orange},
cssUnitDecorators = {fg=orange},
cssStyle = {fg=lightblue},
cssImportant = {fg=blue},

-- JavaScript:
jsVariableDef = {fg=lightblue},
jsFuncArgs = {fg=lightblue},
jsFuncBlock = {fg=lightblue},
jsRegexpString = {fg=lightred},
jsThis = {fg=blue},
jsOperatorKeyword = {fg=blue},
jsDestructuringBlock = {fg=lightblue},
jsObjectKey = {fg=lightblue},
jsGlobalObjects = {fg=bluegreen},
jsModuleKeyword = {fg=lightblue},
jsClassDefinition = {fg=bluegreen},
jsClassKeyword = {fg=blue},
jsExtendsKeyword = {fg=blue},
jsExportDefault = {fg=pink},
jsFuncCall = {fg=yellow},
jsObjectValue = {fg=lightblue},
jsParen = {fg=lightblue},
jsObjectProp = {fg=lightblue},
jsIfElseBlock = {fg=lightblue},
jsParenIfElse = {fg=lightblue},
jsSpreadOperator = {fg=lightblue},
jsSpreadExpression = {fg=lightblue},

-- Typescript:
typescriptLabel = {fg=lightblue},
typescriptExceptions = {fg=lightblue},
typescriptBraces = {fg=front},
typescriptEndColons = {fg=lightblue},
typescriptParens = {fg=front},
typescriptDocTags = {fg=blue},
typescriptDocComment = {fg=bluegreen},
typescriptLogicSymbols = {fg=lightblue},
typescriptImport = {fg=pink},
typescriptBOM = {fg=lightblue},
typescriptVariableDeclaration = {fg=lightblue},
typescriptVariable = {fg=blue},
typescriptExport = {fg=pink},
typescriptAliasDeclaration = {fg=bluegreen},
typescriptAliasKeyword = {fg=blue},
typescriptClassName = {fg=bluegreen},
typescriptAccessibilityModifier = {fg=blue},
typescriptOperator = {fg=blue},
typescriptArrowFunc = {fg=blue},
typescriptMethodAccessor = {fg=blue},
typescriptMember = {fg=yellow},
typescriptTypeReference = {fg=bluegreen},
typescriptDefault = {fg=lightblue},
typescriptTemplateSB = {fg=yelloworange},
typescriptArrowFuncArg = {fg=lightblue},
typescriptParamImpl = {fg=lightblue},
typescriptFuncComma = {fg=lightblue},
typescriptCastKeyword = {fg=lightblue},
typescriptCall = {fg=blue},
typescriptCase = {fg=lightblue},
typescriptReserved = {fg=pink},
typescriptDefault = {fg=lightblue},
typescriptDecorator = {fg=yellow},
typescriptPredefinedType = {fg=bluegreen},
typescriptClassHeritage = {fg=bluegreen},
typescriptClassExtends = {fg=blue},
typescriptClassKeyword = {fg=blue},
typescriptBlock = {fg=lightblue},
typescriptDOMDocProp = {fg=lightblue},
typescriptTemplateSubstitution = {fg=lightblue},
typescriptClassBlock = {fg=lightblue},
typescriptFuncCallArg = {fg=lightblue},
typescriptIndexExpr = {fg=lightblue},
typescriptConditionalParen = {fg=lightblue},
typescriptArray = {fg=yellow},
typescriptES6SetProp = {fg=lightblue},
typescriptObjectLiteral = {fg=lightblue},
typescriptTypeParameter = {fg=bluegreen},
typescriptEnumKeyword = {fg=blue},
typescriptEnum = {fg=bluegreen},
typescriptLoopParen = {fg=lightblue},
typescriptParenExp = {fg=lightblue},
typescriptModule = {fg=lightblue},
typescriptAmbientDeclaration = {fg=blue},
typescriptModule = {fg=blue},
typescriptFuncTypeArrow = {fg=blue},
typescriptInterfaceHeritage = {fg=bluegreen},
typescriptInterfaceName = {fg=bluegreen},
typescriptInterfaceKeyword = {fg=blue},
typescriptInterfaceExtends = {fg=blue},
typescriptGlobal = {fg=bluegreen},
typescriptAsyncFuncKeyword = {fg=blue},
typescriptFuncKeyword = {fg=blue},
typescriptGlobalMethod = {fg=yellow},
typescriptPromiseMethod = {fg=yellow},

-- XML:
xmlTag = {fg=bluegreen},
xmlTagName = {fg=bluegreen},
xmlEndTag = {fg=bluegreen},

-- Ruby:
rubyClassNameTag = {fg=bluegreen},
rubyClassName = {fg=bluegreen},
rubyModuleName = {fg=bluegreen},
rubyConstant = {fg=bluegreen},

-- Golang:
goPackage = {fg=blue},
goImport = {fg=blue},
goVar = {fg=blue},
goConst = {fg=blue},
goStatement = {fg=pink},
goType = {fg=bluegreen},
goSignedInts = {fg=bluegreen},
goUnsignedInts = {fg=bluegreen},
goFloats = {fg=bluegreen},
goComplexes = {fg=bluegreen},
goBuiltins = {fg=yellow},
goBoolean = {fg=blue},
goPredefinedIdentifiers = {fg=blue},
goTodo = {fg=green},
goDeclaration = {fg=blue},
goDeclType = {fg=blue},
goTypeDecl = {fg=blue},
goTypeName = {fg=bluegreen},
goVarAssign = {fg=lightblue},
goVarDefs = {fg=lightblue},
goReceiver = {fg=front},
goReceiverType = {fg=front},
goFunctionCall = {fg=yellow},
goMethodCall = {fg=yellow},
goSingleDecl = {fg=lightblue},

-- Python:
pythonStatement = {fg=blue},
pythonOperator = {fg=blue},
pythonException = {fg=pink},
pythonExClass = {fg=bluegreen},
pythonBuiltinObj = {fg=lightblue},
pythonBuiltinType = {fg=bluegreen},
pythonBoolean = {fg=blue},
pythonNone = {fg=blue},
pythonTodo = {fg=blue},
pythonClassVar = {fg=blue},
pythonClassDef = {fg=bluegreen},

-- TeX:
texStatement = {fg=blue},
texBeginEnd = {fg=yellow},
texBeginEndName = {fg=lightblue},
texOption = {fg=lightblue},
texBeginEndModifier = {fg=lightblue},
texDocType = {fg=pink},
texDocTypeArgs = {fg=lightblue},

-- Git:
gitcommitHeader = {fg=gray},
gitcommitOnBranch = {fg=gray},
gitcommitBranch = {fg=pink},
gitcommitComment = {fg=gray},
gitcommitSelectedType = {fg=green},
gitcommitSelectedFile = {fg=green},
gitcommitDiscardedType = {fg=red},
gitcommitDiscardedFile = {fg=red},
gitcommitOverflow = {fg=red},
gitcommitSummary = {fg=pink},
gitcommitBlank = {fg=pink},

-- Lua:
luaFuncCall = {fg=yellow},
luaFuncArgName = {fg=lightblue},
luaFuncKeyword = {fg=pink},
luaLocal = {fg=pink},
luaBuiltIn = {fg=blue},

-- SH:
shDeref = {fg=lightblue},
shVariable = {fg=lightblue},

-- SQL:
sqlKeyword = {fg=pink},
sqlFunction = {fg=yelloworange},
sqlOperator = {fg=pink},

-- YAML:
yamlKey = {fg=blue},
yamlConstant = {fg=blue},
}

for group,opts in pairs(filetypes) do
  hi(group, opts)
end
